version: '3.9'

services:
  redis:
    image: redis:7-alpine
    container_name: keyusage-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./docker/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - keyusage-network

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: keyusage-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-}
      - LOG_LEVEL=info
      - MAX_WORKERS=100
      - QUEUE_SIZE=10000
      - HTTP_TIMEOUT=30s
      - CACHE_TTL=300s
      - SESSION_TTL=168h
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - keyusage-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 128M

  # Optional: Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: keyusage-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - keyusage-network
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: keyusage-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - keyusage-network
    profiles:
      - monitoring

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  app-logs:
    driver: local

networks:
  keyusage-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
